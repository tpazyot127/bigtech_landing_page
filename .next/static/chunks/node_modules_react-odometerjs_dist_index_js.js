/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["node_modules_react-odometerjs_dist_index_js"],{

/***/ "./node_modules/odometer/odometer.js":
/*!*******************************************!*\
  !*** ./node_modules/odometer/odometer.js ***!
  \*******************************************/
/***/ (function(module, exports, __webpack_require__) {

eval(__webpack_require__.ts("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function() {\n  var COUNT_FRAMERATE, COUNT_MS_PER_FRAME, DIGIT_FORMAT, DIGIT_HTML, DIGIT_SPEEDBOOST, DURATION, FORMAT_MARK_HTML, FORMAT_PARSER, FRAMERATE, FRAMES_PER_VALUE, MS_PER_FRAME, MutationObserver, Odometer, RIBBON_HTML, TRANSITION_END_EVENTS, TRANSITION_SUPPORT, VALUE_HTML, addClass, createFromHTML, fractionalPart, now, removeClass, requestAnimationFrame, round, transitionCheckStyles, trigger, truncate, wrapJQuery, _jQueryWrapped, _old, _ref, _ref1,\n    __slice = [].slice;\n\n  VALUE_HTML = '<span class=\"odometer-value\"></span>';\n\n  RIBBON_HTML = '<span class=\"odometer-ribbon\"><span class=\"odometer-ribbon-inner\">' + VALUE_HTML + '</span></span>';\n\n  DIGIT_HTML = '<span class=\"odometer-digit\"><span class=\"odometer-digit-spacer\">8</span><span class=\"odometer-digit-inner\">' + RIBBON_HTML + '</span></span>';\n\n  FORMAT_MARK_HTML = '<span class=\"odometer-formatting-mark\"></span>';\n\n  DIGIT_FORMAT = '(,ddd).dd';\n\n  FORMAT_PARSER = /^\\(?([^)]*)\\)?(?:(.)(d+))?$/;\n\n  FRAMERATE = 30;\n\n  DURATION = 2000;\n\n  COUNT_FRAMERATE = 20;\n\n  FRAMES_PER_VALUE = 2;\n\n  DIGIT_SPEEDBOOST = .5;\n\n  MS_PER_FRAME = 1000 / FRAMERATE;\n\n  COUNT_MS_PER_FRAME = 1000 / COUNT_FRAMERATE;\n\n  TRANSITION_END_EVENTS = 'transitionend webkitTransitionEnd oTransitionEnd otransitionend MSTransitionEnd';\n\n  transitionCheckStyles = document.createElement('div').style;\n\n  TRANSITION_SUPPORT = (transitionCheckStyles.transition != null) || (transitionCheckStyles.webkitTransition != null) || (transitionCheckStyles.mozTransition != null) || (transitionCheckStyles.oTransition != null);\n\n  requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame;\n\n  MutationObserver = window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver;\n\n  createFromHTML = function(html) {\n    var el;\n    el = document.createElement('div');\n    el.innerHTML = html;\n    return el.children[0];\n  };\n\n  removeClass = function(el, name) {\n    return el.className = el.className.replace(new RegExp(\"(^| )\" + (name.split(' ').join('|')) + \"( |$)\", 'gi'), ' ');\n  };\n\n  addClass = function(el, name) {\n    removeClass(el, name);\n    return el.className += \" \" + name;\n  };\n\n  trigger = function(el, name) {\n    var evt;\n    if (document.createEvent != null) {\n      evt = document.createEvent('HTMLEvents');\n      evt.initEvent(name, true, true);\n      return el.dispatchEvent(evt);\n    }\n  };\n\n  now = function() {\n    var _ref, _ref1;\n    return (_ref = (_ref1 = window.performance) != null ? typeof _ref1.now === \"function\" ? _ref1.now() : void 0 : void 0) != null ? _ref : +(new Date);\n  };\n\n  round = function(val, precision) {\n    if (precision == null) {\n      precision = 0;\n    }\n    if (!precision) {\n      return Math.round(val);\n    }\n    val *= Math.pow(10, precision);\n    val += 0.5;\n    val = Math.floor(val);\n    return val /= Math.pow(10, precision);\n  };\n\n  truncate = function(val) {\n    if (val < 0) {\n      return Math.ceil(val);\n    } else {\n      return Math.floor(val);\n    }\n  };\n\n  fractionalPart = function(val) {\n    return val - round(val);\n  };\n\n  _jQueryWrapped = false;\n\n  (wrapJQuery = function() {\n    var property, _i, _len, _ref, _results;\n    if (_jQueryWrapped) {\n      return;\n    }\n    if (window.jQuery != null) {\n      _jQueryWrapped = true;\n      _ref = ['html', 'text'];\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        property = _ref[_i];\n        _results.push((function(property) {\n          var old;\n          old = window.jQuery.fn[property];\n          return window.jQuery.fn[property] = function(val) {\n            var _ref1;\n            if ((val == null) || (((_ref1 = this[0]) != null ? _ref1.odometer : void 0) == null)) {\n              return old.apply(this, arguments);\n            }\n            return this[0].odometer.update(val);\n          };\n        })(property));\n      }\n      return _results;\n    }\n  })();\n\n  setTimeout(wrapJQuery, 0);\n\n  Odometer = (function() {\n    function Odometer(options) {\n      var e, k, property, v, _base, _i, _len, _ref, _ref1, _ref2,\n        _this = this;\n      this.options = options;\n      this.el = this.options.el;\n      if (this.el.odometer != null) {\n        return this.el.odometer;\n      }\n      this.el.odometer = this;\n      _ref = Odometer.options;\n      for (k in _ref) {\n        v = _ref[k];\n        if (this.options[k] == null) {\n          this.options[k] = v;\n        }\n      }\n      if ((_base = this.options).duration == null) {\n        _base.duration = DURATION;\n      }\n      this.MAX_VALUES = ((this.options.duration / MS_PER_FRAME) / FRAMES_PER_VALUE) | 0;\n      this.resetFormat();\n      this.value = this.cleanValue((_ref1 = this.options.value) != null ? _ref1 : '');\n      this.renderInside();\n      this.render();\n      try {\n        _ref2 = ['innerHTML', 'innerText', 'textContent'];\n        for (_i = 0, _len = _ref2.length; _i < _len; _i++) {\n          property = _ref2[_i];\n          if (this.el[property] != null) {\n            (function(property) {\n              return Object.defineProperty(_this.el, property, {\n                get: function() {\n                  var _ref3;\n                  if (property === 'innerHTML') {\n                    return _this.inside.outerHTML;\n                  } else {\n                    return (_ref3 = _this.inside.innerText) != null ? _ref3 : _this.inside.textContent;\n                  }\n                },\n                set: function(val) {\n                  return _this.update(val);\n                }\n              });\n            })(property);\n          }\n        }\n      } catch (_error) {\n        e = _error;\n        this.watchForMutations();\n      }\n      this;\n    }\n\n    Odometer.prototype.renderInside = function() {\n      this.inside = document.createElement('div');\n      this.inside.className = 'odometer-inside';\n      this.el.innerHTML = '';\n      return this.el.appendChild(this.inside);\n    };\n\n    Odometer.prototype.watchForMutations = function() {\n      var e,\n        _this = this;\n      if (MutationObserver == null) {\n        return;\n      }\n      try {\n        if (this.observer == null) {\n          this.observer = new MutationObserver(function(mutations) {\n            var newVal;\n            newVal = _this.el.innerText;\n            _this.renderInside();\n            _this.render(_this.value);\n            return _this.update(newVal);\n          });\n        }\n        this.watchMutations = true;\n        return this.startWatchingMutations();\n      } catch (_error) {\n        e = _error;\n      }\n    };\n\n    Odometer.prototype.startWatchingMutations = function() {\n      if (this.watchMutations) {\n        return this.observer.observe(this.el, {\n          childList: true\n        });\n      }\n    };\n\n    Odometer.prototype.stopWatchingMutations = function() {\n      var _ref;\n      return (_ref = this.observer) != null ? _ref.disconnect() : void 0;\n    };\n\n    Odometer.prototype.cleanValue = function(val) {\n      var _ref;\n      if (typeof val === 'string') {\n        val = val.replace((_ref = this.format.radix) != null ? _ref : '.', '<radix>');\n        val = val.replace(/[.,]/g, '');\n        val = val.replace('<radix>', '.');\n        val = parseFloat(val, 10) || 0;\n      }\n      return round(val, this.format.precision);\n    };\n\n    Odometer.prototype.bindTransitionEnd = function() {\n      var event, renderEnqueued, _i, _len, _ref, _results,\n        _this = this;\n      if (this.transitionEndBound) {\n        return;\n      }\n      this.transitionEndBound = true;\n      renderEnqueued = false;\n      _ref = TRANSITION_END_EVENTS.split(' ');\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        event = _ref[_i];\n        _results.push(this.el.addEventListener(event, function() {\n          if (renderEnqueued) {\n            return true;\n          }\n          renderEnqueued = true;\n          setTimeout(function() {\n            _this.render();\n            renderEnqueued = false;\n            return trigger(_this.el, 'odometerdone');\n          }, 0);\n          return true;\n        }, false));\n      }\n      return _results;\n    };\n\n    Odometer.prototype.resetFormat = function() {\n      var format, fractional, parsed, precision, radix, repeating, _ref, _ref1;\n      format = (_ref = this.options.format) != null ? _ref : DIGIT_FORMAT;\n      format || (format = 'd');\n      parsed = FORMAT_PARSER.exec(format);\n      if (!parsed) {\n        throw new Error(\"Odometer: Unparsable digit format\");\n      }\n      _ref1 = parsed.slice(1, 4), repeating = _ref1[0], radix = _ref1[1], fractional = _ref1[2];\n      precision = (fractional != null ? fractional.length : void 0) || 0;\n      return this.format = {\n        repeating: repeating,\n        radix: radix,\n        precision: precision\n      };\n    };\n\n    Odometer.prototype.render = function(value) {\n      var classes, cls, match, newClasses, theme, _i, _len;\n      if (value == null) {\n        value = this.value;\n      }\n      this.stopWatchingMutations();\n      this.resetFormat();\n      this.inside.innerHTML = '';\n      theme = this.options.theme;\n      classes = this.el.className.split(' ');\n      newClasses = [];\n      for (_i = 0, _len = classes.length; _i < _len; _i++) {\n        cls = classes[_i];\n        if (!cls.length) {\n          continue;\n        }\n        if (match = /^odometer-theme-(.+)$/.exec(cls)) {\n          theme = match[1];\n          continue;\n        }\n        if (/^odometer(-|$)/.test(cls)) {\n          continue;\n        }\n        newClasses.push(cls);\n      }\n      newClasses.push('odometer');\n      if (!TRANSITION_SUPPORT) {\n        newClasses.push('odometer-no-transitions');\n      }\n      if (theme) {\n        newClasses.push(\"odometer-theme-\" + theme);\n      } else {\n        newClasses.push(\"odometer-auto-theme\");\n      }\n      this.el.className = newClasses.join(' ');\n      this.ribbons = {};\n      this.formatDigits(value);\n      return this.startWatchingMutations();\n    };\n\n    Odometer.prototype.formatDigits = function(value) {\n      var digit, valueDigit, valueString, wholePart, _i, _j, _len, _len1, _ref, _ref1;\n      this.digits = [];\n      if (this.options.formatFunction) {\n        valueString = this.options.formatFunction(value);\n        _ref = valueString.split('').reverse();\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          valueDigit = _ref[_i];\n          if (valueDigit.match(/0-9/)) {\n            digit = this.renderDigit();\n            digit.querySelector('.odometer-value').innerHTML = valueDigit;\n            this.digits.push(digit);\n            this.insertDigit(digit);\n          } else {\n            this.addSpacer(valueDigit);\n          }\n        }\n      } else {\n        wholePart = !this.format.precision || !fractionalPart(value) || false;\n        _ref1 = value.toString().split('').reverse();\n        for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\n          digit = _ref1[_j];\n          if (digit === '.') {\n            wholePart = true;\n          }\n          this.addDigit(digit, wholePart);\n        }\n      }\n    };\n\n    Odometer.prototype.update = function(newValue) {\n      var diff,\n        _this = this;\n      newValue = this.cleanValue(newValue);\n      if (!(diff = newValue - this.value)) {\n        return;\n      }\n      removeClass(this.el, 'odometer-animating-up odometer-animating-down odometer-animating');\n      if (diff > 0) {\n        addClass(this.el, 'odometer-animating-up');\n      } else {\n        addClass(this.el, 'odometer-animating-down');\n      }\n      this.stopWatchingMutations();\n      this.animate(newValue);\n      this.startWatchingMutations();\n      setTimeout(function() {\n        _this.el.offsetHeight;\n        return addClass(_this.el, 'odometer-animating');\n      }, 0);\n      return this.value = newValue;\n    };\n\n    Odometer.prototype.renderDigit = function() {\n      return createFromHTML(DIGIT_HTML);\n    };\n\n    Odometer.prototype.insertDigit = function(digit, before) {\n      if (before != null) {\n        return this.inside.insertBefore(digit, before);\n      } else if (!this.inside.children.length) {\n        return this.inside.appendChild(digit);\n      } else {\n        return this.inside.insertBefore(digit, this.inside.children[0]);\n      }\n    };\n\n    Odometer.prototype.addSpacer = function(chr, before, extraClasses) {\n      var spacer;\n      spacer = createFromHTML(FORMAT_MARK_HTML);\n      spacer.innerHTML = chr;\n      if (extraClasses) {\n        addClass(spacer, extraClasses);\n      }\n      return this.insertDigit(spacer, before);\n    };\n\n    Odometer.prototype.addDigit = function(value, repeating) {\n      var chr, digit, resetted, _ref;\n      if (repeating == null) {\n        repeating = true;\n      }\n      if (value === '-') {\n        return this.addSpacer(value, null, 'odometer-negation-mark');\n      }\n      if (value === '.') {\n        return this.addSpacer((_ref = this.format.radix) != null ? _ref : '.', null, 'odometer-radix-mark');\n      }\n      if (repeating) {\n        resetted = false;\n        while (true) {\n          if (!this.format.repeating.length) {\n            if (resetted) {\n              throw new Error(\"Bad odometer format without digits\");\n            }\n            this.resetFormat();\n            resetted = true;\n          }\n          chr = this.format.repeating[this.format.repeating.length - 1];\n          this.format.repeating = this.format.repeating.substring(0, this.format.repeating.length - 1);\n          if (chr === 'd') {\n            break;\n          }\n          this.addSpacer(chr);\n        }\n      }\n      digit = this.renderDigit();\n      digit.querySelector('.odometer-value').innerHTML = value;\n      this.digits.push(digit);\n      return this.insertDigit(digit);\n    };\n\n    Odometer.prototype.animate = function(newValue) {\n      if (!TRANSITION_SUPPORT || this.options.animation === 'count') {\n        return this.animateCount(newValue);\n      } else {\n        return this.animateSlide(newValue);\n      }\n    };\n\n    Odometer.prototype.animateCount = function(newValue) {\n      var cur, diff, last, start, tick,\n        _this = this;\n      if (!(diff = +newValue - this.value)) {\n        return;\n      }\n      start = last = now();\n      cur = this.value;\n      return (tick = function() {\n        var delta, dist, fraction;\n        if ((now() - start) > _this.options.duration) {\n          _this.value = newValue;\n          _this.render();\n          trigger(_this.el, 'odometerdone');\n          return;\n        }\n        delta = now() - last;\n        if (delta > COUNT_MS_PER_FRAME) {\n          last = now();\n          fraction = delta / _this.options.duration;\n          dist = diff * fraction;\n          cur += dist;\n          _this.render(Math.round(cur));\n        }\n        if (requestAnimationFrame != null) {\n          return requestAnimationFrame(tick);\n        } else {\n          return setTimeout(tick, COUNT_MS_PER_FRAME);\n        }\n      })();\n    };\n\n    Odometer.prototype.getDigitCount = function() {\n      var i, max, value, values, _i, _len;\n      values = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n      for (i = _i = 0, _len = values.length; _i < _len; i = ++_i) {\n        value = values[i];\n        values[i] = Math.abs(value);\n      }\n      max = Math.max.apply(Math, values);\n      return Math.ceil(Math.log(max + 1) / Math.log(10));\n    };\n\n    Odometer.prototype.getFractionalDigitCount = function() {\n      var i, parser, parts, value, values, _i, _len;\n      values = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n      parser = /^\\-?\\d*\\.(\\d*?)0*$/;\n      for (i = _i = 0, _len = values.length; _i < _len; i = ++_i) {\n        value = values[i];\n        values[i] = value.toString();\n        parts = parser.exec(values[i]);\n        if (parts == null) {\n          values[i] = 0;\n        } else {\n          values[i] = parts[1].length;\n        }\n      }\n      return Math.max.apply(Math, values);\n    };\n\n    Odometer.prototype.resetDigits = function() {\n      this.digits = [];\n      this.ribbons = [];\n      this.inside.innerHTML = '';\n      return this.resetFormat();\n    };\n\n    Odometer.prototype.animateSlide = function(newValue) {\n      var boosted, cur, diff, digitCount, digits, dist, end, fractionalCount, frame, frames, i, incr, j, mark, numEl, oldValue, start, _base, _i, _j, _k, _l, _len, _len1, _len2, _m, _ref, _results;\n      oldValue = this.value;\n      fractionalCount = this.getFractionalDigitCount(oldValue, newValue);\n      if (fractionalCount) {\n        newValue = newValue * Math.pow(10, fractionalCount);\n        oldValue = oldValue * Math.pow(10, fractionalCount);\n      }\n      if (!(diff = newValue - oldValue)) {\n        return;\n      }\n      this.bindTransitionEnd();\n      digitCount = this.getDigitCount(oldValue, newValue);\n      digits = [];\n      boosted = 0;\n      for (i = _i = 0; 0 <= digitCount ? _i < digitCount : _i > digitCount; i = 0 <= digitCount ? ++_i : --_i) {\n        start = truncate(oldValue / Math.pow(10, digitCount - i - 1));\n        end = truncate(newValue / Math.pow(10, digitCount - i - 1));\n        dist = end - start;\n        if (Math.abs(dist) > this.MAX_VALUES) {\n          frames = [];\n          incr = dist / (this.MAX_VALUES + this.MAX_VALUES * boosted * DIGIT_SPEEDBOOST);\n          cur = start;\n          while ((dist > 0 && cur < end) || (dist < 0 && cur > end)) {\n            frames.push(Math.round(cur));\n            cur += incr;\n          }\n          if (frames[frames.length - 1] !== end) {\n            frames.push(end);\n          }\n          boosted++;\n        } else {\n          frames = (function() {\n            _results = [];\n            for (var _j = start; start <= end ? _j <= end : _j >= end; start <= end ? _j++ : _j--){ _results.push(_j); }\n            return _results;\n          }).apply(this);\n        }\n        for (i = _k = 0, _len = frames.length; _k < _len; i = ++_k) {\n          frame = frames[i];\n          frames[i] = Math.abs(frame % 10);\n        }\n        digits.push(frames);\n      }\n      this.resetDigits();\n      _ref = digits.reverse();\n      for (i = _l = 0, _len1 = _ref.length; _l < _len1; i = ++_l) {\n        frames = _ref[i];\n        if (!this.digits[i]) {\n          this.addDigit(' ', i >= fractionalCount);\n        }\n        if ((_base = this.ribbons)[i] == null) {\n          _base[i] = this.digits[i].querySelector('.odometer-ribbon-inner');\n        }\n        this.ribbons[i].innerHTML = '';\n        if (diff < 0) {\n          frames = frames.reverse();\n        }\n        for (j = _m = 0, _len2 = frames.length; _m < _len2; j = ++_m) {\n          frame = frames[j];\n          numEl = document.createElement('div');\n          numEl.className = 'odometer-value';\n          numEl.innerHTML = frame;\n          this.ribbons[i].appendChild(numEl);\n          if (j === frames.length - 1) {\n            addClass(numEl, 'odometer-last-value');\n          }\n          if (j === 0) {\n            addClass(numEl, 'odometer-first-value');\n          }\n        }\n      }\n      if (start < 0) {\n        this.addDigit('-');\n      }\n      mark = this.inside.querySelector('.odometer-radix-mark');\n      if (mark != null) {\n        mark.parent.removeChild(mark);\n      }\n      if (fractionalCount) {\n        return this.addSpacer(this.format.radix, this.digits[fractionalCount - 1], 'odometer-radix-mark');\n      }\n    };\n\n    return Odometer;\n\n  })();\n\n  Odometer.options = (_ref = window.odometerOptions) != null ? _ref : {};\n\n  setTimeout(function() {\n    var k, v, _base, _ref1, _results;\n    if (window.odometerOptions) {\n      _ref1 = window.odometerOptions;\n      _results = [];\n      for (k in _ref1) {\n        v = _ref1[k];\n        _results.push((_base = Odometer.options)[k] != null ? (_base = Odometer.options)[k] : _base[k] = v);\n      }\n      return _results;\n    }\n  }, 0);\n\n  Odometer.init = function() {\n    var el, elements, _i, _len, _ref1, _results;\n    if (document.querySelectorAll == null) {\n      return;\n    }\n    elements = document.querySelectorAll(Odometer.options.selector || '.odometer');\n    _results = [];\n    for (_i = 0, _len = elements.length; _i < _len; _i++) {\n      el = elements[_i];\n      _results.push(el.odometer = new Odometer({\n        el: el,\n        value: (_ref1 = el.innerText) != null ? _ref1 : el.textContent\n      }));\n    }\n    return _results;\n  };\n\n  if ((((_ref1 = document.documentElement) != null ? _ref1.doScroll : void 0) != null) && (document.createEventObject != null)) {\n    _old = document.onreadystatechange;\n    document.onreadystatechange = function() {\n      if (document.readyState === 'complete' && Odometer.options.auto !== false) {\n        Odometer.init();\n      }\n      return _old != null ? _old.apply(this, arguments) : void 0;\n    };\n  } else {\n    document.addEventListener('DOMContentLoaded', function() {\n      if (Odometer.options.auto !== false) {\n        return Odometer.init();\n      }\n    }, false);\n  }\n\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function() {\n      return Odometer;\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n\n}).call(this);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/odometer/odometer.js\n"));

/***/ }),

/***/ "./node_modules/react-odometerjs/dist/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/react-odometerjs/dist/index.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var odometer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! odometer */ \"./node_modules/odometer/odometer.js\");\n/* harmony import */ var odometer__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(odometer__WEBPACK_IMPORTED_MODULE_1__);\n\n\nconst ReactOdometer = ({ animation, duration, format, theme, value, ...rest }) => {\n    const node = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const odometer = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        odometer.current = new (odometer__WEBPACK_IMPORTED_MODULE_1___default())({\n            el: node.current,\n            auto: false,\n            animation,\n            duration,\n            format,\n            theme,\n            value,\n        });\n    }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n        odometer.current?.update(value);\n    }, [value]);\n    return (0,react__WEBPACK_IMPORTED_MODULE_0__.createElement)('div', {\n        ...rest,\n        ref: node,\n    });\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (ReactOdometer);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvcmVhY3Qtb2RvbWV0ZXJqcy9kaXN0L2luZGV4LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXlEO0FBQ3pCO0FBQ2hDLHlCQUF5QixvREFBb0Q7QUFDN0UsaUJBQWlCLDZDQUFNO0FBQ3ZCLHFCQUFxQiw2Q0FBTTtBQUMzQixJQUFJLGdEQUFTO0FBQ2IsK0JBQStCLGlEQUFRO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTCxJQUFJLGdEQUFTO0FBQ2I7QUFDQSxLQUFLO0FBQ0wsV0FBVyxvREFBYTtBQUN4QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsK0RBQWUsYUFBYSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9yZWFjdC1vZG9tZXRlcmpzL2Rpc3QvaW5kZXguanM/OTM3ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVFbGVtZW50LCB1c2VFZmZlY3QsIHVzZVJlZiB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBPZG9tZXRlciBmcm9tICdvZG9tZXRlcic7XG5jb25zdCBSZWFjdE9kb21ldGVyID0gKHsgYW5pbWF0aW9uLCBkdXJhdGlvbiwgZm9ybWF0LCB0aGVtZSwgdmFsdWUsIC4uLnJlc3QgfSkgPT4ge1xuICAgIGNvbnN0IG5vZGUgPSB1c2VSZWYobnVsbCk7XG4gICAgY29uc3Qgb2RvbWV0ZXIgPSB1c2VSZWYoKTtcbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBvZG9tZXRlci5jdXJyZW50ID0gbmV3IE9kb21ldGVyKHtcbiAgICAgICAgICAgIGVsOiBub2RlLmN1cnJlbnQsXG4gICAgICAgICAgICBhdXRvOiBmYWxzZSxcbiAgICAgICAgICAgIGFuaW1hdGlvbixcbiAgICAgICAgICAgIGR1cmF0aW9uLFxuICAgICAgICAgICAgZm9ybWF0LFxuICAgICAgICAgICAgdGhlbWUsXG4gICAgICAgICAgICB2YWx1ZSxcbiAgICAgICAgfSk7XG4gICAgfSwgW10pO1xuICAgIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIG9kb21ldGVyLmN1cnJlbnQ/LnVwZGF0ZSh2YWx1ZSk7XG4gICAgfSwgW3ZhbHVlXSk7XG4gICAgcmV0dXJuIGNyZWF0ZUVsZW1lbnQoJ2RpdicsIHtcbiAgICAgICAgLi4ucmVzdCxcbiAgICAgICAgcmVmOiBub2RlLFxuICAgIH0pO1xufTtcbmV4cG9ydCBkZWZhdWx0IFJlYWN0T2RvbWV0ZXI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/react-odometerjs/dist/index.js\n"));

/***/ })

}]);